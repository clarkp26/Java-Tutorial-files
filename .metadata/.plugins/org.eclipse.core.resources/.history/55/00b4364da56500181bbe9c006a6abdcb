import java.util.TreeSet;

//import TreeSet.Node;
import jdk.nashorn.api.tree.Tree;

public class TreeTest {
//
//    private Node root = null;
//	public class Node{
//		 int data;
//		 Node right;
//		 Node left;
//	}
//	public static void PreOrderTraverse(Node root) {
//		if(root.left != null) {
//			PreOrderTraverse(root.left);
//		}
//		System.out.println(root.data);
//        if(root.right != null) {
//			PreOrderTraverse(root.right);
//		}
//	}
	
	public static void AnagramCheck(String a,String b) {
		int count =0;
		String[] aa = a.split("");
		String[] bb = a.split("");
		for(int i=0;i<a.length();i++) {
			for( int j=0;j<b.length();j++) {
				if(!a.contains(aa[i])) {
				count++;
			}
				if(!b.contains(bb[i])) {
					count++;
				}
			}
		}
		System.out.println(count);
	}
	public static void main(String[] args) {
//	TreeSet<Integer> t = new TreeSet();
//	t.add(1);
//	t.add(7);
//	t.add(5);
//	t.add(3);
//	t.add(9);
//	t.add(4);
//	Node rot = null;
//	System.out.println(t);
//	PreOrderTraverse(rot);

		AnagramCheck("abc","cde");
	}

}
