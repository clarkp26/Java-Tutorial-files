import java.util.TreeSet;

//import TreeSet.Node;
import jdk.nashorn.api.tree.Tree;

public class TreeTest {
//
//    private Node root = null;
//	public class Node{
//		 int data;
//		 Node right;
//		 Node left;
//	}
//	public static void PreOrderTraverse(Node root) {
//		if(root.left != null) {
//			PreOrderTraverse(root.left);
//		}
//		System.out.println(root.data);
//        if(root.right != null) {
//			PreOrderTraverse(root.right);
//		}
//	}
	
	public static void AnagramCheck(String a,String b) {
		int count =0;
		
		for(int i=0;i< a.length();i++) {
			if(b.indexOf(a.charAt(i)) < 0) {
				count++;
			}
		}
		for (int i=0;i<b.length();i++){
			if(a.indexOf(b.charAt(i)) < 0) {
				count++;
			}
		}
		System.out.println(count);
	}
	public static void main(String[] args) {
//	TreeSet<Integer> t = new TreeSet();
//	t.add(1);
//	t.add(7);
//	t.add(5);
//	t.add(3);
//	t.add(9);
//	t.add(4);
//	Node rot = null;
//	System.out.println(t);
//	PreOrderTraverse(rot);

		AnagramCheck("fcrxzwscanmligyxyvym","jxwtrhvujlmrpdoqbisbwhmgpmeoke");
	}

}
